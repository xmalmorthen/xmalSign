const isCryptoSupported=()=>{const t=window.crypto||window.msCrypto,a=t.subtle||t.webkitSubtle;return!(!t||!a)},isPromiseSupported=()=>!!window.Promise;generateContentPKCS7=((t,a,r,e,i,n)=>new Promise(async(o,w)=>{try{const s=window.crypto||window.msCrypto,S=s.subtle||s.webkitSubtle,u=await openPKCS8PKey(a,t);if("0"!=u[0])throw new Error(ERR_DECRYPT_PKEY);const p=await rawStringToBuffer(u),c=await S.importKey("pkcs8",p,{name:"RSASSA-PKCS1-v1_5",hash:{name:e}},!1,["sign"]),y=await stringToArrayBufferView(i),P=await S.sign({name:"RSASSA-PKCS1-v1_5",hash:{name:e}},c,y),b=n?null:await str2ab(i);o({pkcs7Result:await encodePKCS7(r,P,e,b),hexSignature:await binStringToHex(await arrayBufferToString(P)),b64Signature:btoa(await arrayBufferToString(P))})}catch(t){w(t)}}));